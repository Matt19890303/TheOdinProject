/* 

  body, html {
    height: 100%;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    
  }
  
  * {
    box-sizing: border-box;
  }
  
  .bg-image {
    The image used
    background-image: url("SpaceInvader.jpg");

    
    Add the blur effect
    filter: blur(8px);
    -webkit-filter: blur(8px);
    
    Full height
    height: 100%; 
    
    Center and scale the image nicely
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
  }
  
  Position text in the middle of the page/image
  .bg-text {
    Fallback color
    background-color: rgb(0,0,0);
    Black w/opacity/see-through
    background-color: rgba(0,0,0, 0.4); 
    color: white;
    font-weight: bold;
    border: 3px solid #f1f1f1;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    width: 80%;
    padding: 20px;
    text-align: center;

  } */

/* ############################################################################ */
 /* ############################################################################ */


 /* 
:root {
	--header: 3rem;
	--footer: 40px;
	--main: calc(100vh - calc(var(--header) + var(--footer)));
}

body {
	margin: 0;
	padding: 0;
	border: 0px solid transparent;
	background: #7a7a7a;
}

#container {
	border: 0px solid transparent;
	height: 100vh;
	color: white;
}
#container > * {
	display: flex;
	justify-content: center;
	align-items: center;
}

#header {
	height: var(--header);
	background: #111111;
}
#mainContent {
	height: var(--main);
	background: #343434;
	margin-right: auto;
	margin-left: auto;
}
#footer {
	height: var(--footer);
	background: #232323;
} */


/* ############################################################################ */
 /* ############################################################################ */

/* 
 #container {
	display: flex;
  box-sizing: border-box;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	border: 6px solid black;
	resize: both;
	overflow: auto;
	max-width: 100%;
	max-height: 100%;
}

#iconHolder {
	width: min(150px, 100%);
	height: min(150px, 100%);
  box-sizing: border-box;
  border: 6px solid blue;
} */


/* 
min()
If there are 150px available to the image, it will take up all 150px. If there are not 150px available, 
the image will switch to 100% of the parent’s width. In the first case min() selects 150px, since 150px 
is the smaller (the minimum) between 150px and 100% of the parent’s width; in the second, it chooses 100%. 
min() behaves as a boundary for the maximum allowed value, which in this example is 150px.
You are able to do basic math inside a min ( ) => for example: width: min(80ch, 100vw - 2rem);
 */

 /* 
max()
Max works the same way as min, only in reverse. It will select the largest possible value from within the parentheses. 
You can think of max() as ensuring a minimum allowed value for a property. 
*/


 /* ############################################################################ */
 /* ############################################################################ */

 /* .stackParent{
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
  }
  .stack-Img{
  position: absolute;
  margin: 0;
  min-height: 15vh;
  max-height: 15vh;
  }
  .stack-Txt{
  z-index: 99;
  } */




 /* ############################################################################ */
 /* ############################################################################ */

