
npx tailwindcss -i ./src/input.css -o ./src/output.css --watch



The look of the User Interface is up to you, but it should be able to do the following:
 - View all projects.
 - View all todos in each project (probably just the title and duedateâ€¦ perhaps changing color for different priorities).
 - Expand a single todo to see/edit its details.
 - Delete a todo.




############################################################
 JS add style to an element:
// Sets a default style for each task
task.style.backgroundImage = "url('images/unchecked.png')";
task.style.backgroundRepeat = "no-repeat";
task.style.backgroundSize = "contain";
task.style.paddingLeft = "2rem"; 
task.style.marginTop = "1.25rem";
task.style.border = "1px solid red";
############################################################
// Same in CSS:
background-image: url('images/unchecked.png');
background-repeat: no-repeat;
background-size: contain;
padding-left: 2rem;
margin-top: 1.25rem;
############################################################


// Projects adding by clicking button and inputting text and randomising hash tags icons

mylistsButton.addEventListener('click', function() {
  const newListItemText = prompt('Enter a new project name:');
  if (newListItemText) {
    const newListItem = document.createElement('li');
    const hashTag = document.createElement('span');
    hashTag.textContent = '#';
    hashTag.style.color = getRandomColor();
    newListItem.appendChild(hashTag);
    const textNode = document.createTextNode(newListItemText);
    newListItem.appendChild(textNode);
    sideBarList.appendChild(newListItem);

    // Add new option to assignee dropdown
    const newOption = document.createElement('li');
    newOption.value = newListItemText;
    newOption.textContent = newListItemText;
    assigneeDropdown.appendChild(newOption);
  }

  let deleteButton = document.createElement("button");
  deleteButton.innerHTML = "\u00d7";
  deleteButton.addEventListener("click", deleteTask);

  newListItem.appendChild(deleteButton);
});

// The getRandomColor() function, a loop runs six times, and each time, 
// a random character from the string '0123456789ABCDEF' is selected and 
// appended to the color variable, which starts with '#'. This generates 
// a random hexadecimal color code in the format #RRGGBB.
function getRandomColor() {
  const letters = '0123456789ABCDEF';
  let color = '#';
  for (let i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 16)];
  }
  return color;
}

##############################################################################


index/html:

https://tailwindflex.com/@kofi-osei/todo-list-in-tailwlind
https://www.geeksforgeeks.org/create-a-to-do-list-using-tailwind-css/
https://dev.to/elliot_brenya/to-do-list-application-with-tailwind-css-and-javascript-88g

